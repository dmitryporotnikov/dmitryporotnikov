<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Virtualization on My New Hugo Site</title><link>http://localhost:1313/categories/virtualization/</link><description>Recent content in Virtualization on My New Hugo Site</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 11 Oct 2023 14:13:24 +0000</lastBuildDate><atom:link href="http://localhost:1313/categories/virtualization/index.xml" rel="self" type="application/rss+xml"/><item><title>Nested Virtualization Madness: Running DOSBox Inside Windows XP Inside Windows 10 on an Azure VM with Hyper-V</title><link>http://localhost:1313/docs/legacy/2023-10-11-nested-virtualization-madness-running-dosbox-inside-windows-xp-inside-windows-10-on-an-azure-vm-with-hyper-v/</link><pubDate>Wed, 11 Oct 2023 14:13:24 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-11-nested-virtualization-madness-running-dosbox-inside-windows-xp-inside-windows-10-on-an-azure-vm-with-hyper-v/</guid><description>Just for fun, I have an Azure VM running Hyper-V, which in turn is running Windows 10. On that Windows 10, I’m running Windows XP, and within XP, I have DOSBox running.</description></item><item><title>PowerShell: Script-Based Workaround for Renaming Azure VMs and Switching to Unsupported Sizes</title><link>http://localhost:1313/docs/legacy/2023-10-10-bypassing-azure-vm-limitations-script-based-solution/</link><pubDate>Tue, 10 Oct 2023 14:48:05 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-10-bypassing-azure-vm-limitations-script-based-solution/</guid><description>Inability to change the name of an existing Azure VM. Constraints when resizing VMs, specifically: You can’t resize a VM size that has a local temp disk to a VM size without one, and vice versa. The only combinations allowed for resizing are:
VM (with no local temp disk) -&amp;gt; VM (with no local temp disk) VM (with local temp disk) -&amp;gt; VM (with local temp disk) Workaround # Below is a PowerShell script that allows you to circumvent the VM name and size restrictions while keeping the disk, network interface card, and extensions in place.</description></item><item><title>C++: Detecting Hypervisor Presence Using CPUID Timing</title><link>http://localhost:1313/docs/legacy/2023-10-05-detecting-hypervisor-presence-using-cpuid-in-cpp/</link><pubDate>Thu, 05 Oct 2023 21:12:44 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-05-detecting-hypervisor-presence-using-cpuid-in-cpp/</guid><description>The CPUID instruction is a processor supplementary instruction for the x86 architecture. It is used to query the CPU for information about its features and capabilities.
How VM-Exits Work with CPUID # The guest operating system executes the CPUID instruction. The CPU generates a VM-exit interrupt. The hypervisor intercepts the VM-exit interrupt and takes control of the VM. The hypervisor executes the CPUID instruction and returns the results to the guest operating system.</description></item><item><title>How to Upgrade Legacy Azure Windows VMs Not Supported by Azure&amp;#8217;s Native In-Place Upgrade Feature</title><link>http://localhost:1313/docs/legacy/2023-09-27-how-to-upgrade-legacy-azure-windows-vms/</link><pubDate>Wed, 27 Sep 2023 00:39:31 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-27-how-to-upgrade-legacy-azure-windows-vms/</guid><description>In a previous guide, we discussed upgrading Windows Server 2012 R2 (WS2012R2) in Azure using Azure’s native upgrade mechanism. However, what do you do if you’re dealing with a legacy workload? If you’re concerned about the long-term security and supportability of your VM, and redeploying or moving everything within the OS isn’t feasible, this guide is for you. Here, I’ll walk you through the process of upgrading a legacy Azure Windows VM without relying on any on-premises solutions or exporting the drive.</description></item><item><title>Deploy Storage Spaces on a Single Virtual Machine to Get Optimal Performance/Cost Ratio</title><link>http://localhost:1313/docs/legacy/2023-09-25-deploy-storage-spaces-on-azure-vm/</link><pubDate>Mon, 25 Sep 2023 22:10:24 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-25-deploy-storage-spaces-on-azure-vm/</guid><description>Storage Spaces is a feature of Windows Server that allows you to pool multiple physical disks together to create a single virtual disk. This can be useful for a variety of reasons, such as:
To increase the overall capacity of your storage. To improve the performance of your storage by distributing data across multiple disks. To get azure host caching feature on disks that are higher than 4 TB. In this article, I will show you how to deploy Storage Spaces on a single virtual machine in Azure to achieve optimal storage performance with minimal cost.</description></item><item><title>PowerShell: Create a NAT VMSwitch on Hyper-V</title><link>http://localhost:1313/docs/legacy/2023-09-18-powershell-create-a-nat-vmswitch-on-hyper-v/</link><pubDate>Mon, 18 Sep 2023 09:38:37 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-18-powershell-create-a-nat-vmswitch-on-hyper-v/</guid><description>https://learn.microsoft.com/en-us/virtualization/hyper-v-on-windows/user-guide/setup-nat-network
Live migration in clustered scenario won’t work for VMs using this NAT.
Quick migration will work.
Define the NAT Switch Name and NAT Configuration Parameters # $switchName = &amp;ldquo;NATSwitch&amp;rdquo; $natSubnet = &amp;ldquo;192.168.100.0/24&amp;rdquo; $gatewayAddress = &amp;ldquo;192.168.100.1&amp;rdquo; $netAdapaterName = &amp;ldquo;vEthernet (&amp;quot;+$switchName+&amp;rdquo;)&amp;quot;
Create a new virtual switch # New-VMSwitch -SwitchName $switchName -SwitchType Internal
Retrieve the actual Network Adapter for the created switch # $netAdapter = Get-NetAdapter -Name $netAdapaterName
Set the IP address on the NAT Gateway (the virtual switch) # New-NetIPAddress -IPAddress $gatewayAddress -PrefixLength 24 -InterfaceIndex $netAdapter.</description></item><item><title>How Hyper-V Works, High Level Overview</title><link>http://localhost:1313/docs/legacy/2023-09-10-how-hyper-v-works-high-level-overview/</link><pubDate>Sun, 10 Sep 2023 19:28:13 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-10-how-hyper-v-works-high-level-overview/</guid><description>Hyper-V stands as Microsoft’s first standalone hypervisor, offering extensive support for the x86-64 architecture. It has established its own space in the virtualization market, going toe-to-toe with competitors like VMware ESXi, Xen, and KVM. One of its distinct advantages is its native integration with Microsoft-centric environments.
Contrary to many Type 2 hypervisors that function atop an existing operating system, Hyper-V is a Type 1 hypervisor that interacts directly with the hardware.</description></item></channel></rss>