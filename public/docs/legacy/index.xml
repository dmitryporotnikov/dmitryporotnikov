<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Example Site on My New Hugo Site</title><link>http://localhost:1313/docs/legacy/</link><description>Recent content in Example Site on My New Hugo Site</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 10 Jun 2024 08:46:23 +0000</lastBuildDate><atom:link href="http://localhost:1313/docs/legacy/index.xml" rel="self" type="application/rss+xml"/><item><title>Setting Up Chrony for Time Synchronization in Azure VMs</title><link>http://localhost:1313/docs/legacy/2024-06-10-azure-linux-vm-time-synchronization/</link><pubDate>Mon, 10 Jun 2024 08:46:23 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-06-10-azure-linux-vm-time-synchronization/</guid><description>Azure VMs have several options for maintaining accurate time:
1. VMs can inherit time from their host (host time).
2. VMs can synchronize directly with an external time server.
3. A combination of both methods can be used.
When VMs restart, experience network traffic, or undergo maintenance, their clocks might drift. Azure helps manage this through the VMICTimeSync service and the integration of the Precision Time Protocol. Azure hosts are synced to Microsoft’s internal time servers, connected to GPS-antenna-equipped Stratum 1 devices.</description></item><item><title>Resolving the "Argument list too long" Error When Deleting Files in Linux</title><link>http://localhost:1313/docs/legacy/2024-04-23-resolving-argument-list-too-long-error-linux/</link><pubDate>Tue, 23 Apr 2024 08:46:11 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-04-23-resolving-argument-list-too-long-error-linux/</guid><description>When working on Linux, you may occasionally encounter the error /bin/rm: cannot execute [Argument list too long] while attempting to delete a large number of files. This issue typically arises when the shell command exceeds the allowed limit for arguments.
Suppose you have a directory filled with files ending with the extension .garbagefile, and you decide to clean up by deleting them. You might use the following command:
rm -f *.</description></item><item><title>Automatic OS Upgrade is not supported for this Virtual Machine Scale Set because a health probe or health extension was not specified.</title><link>http://localhost:1313/docs/legacy/2024-03-28-automatic-os-upgrade-vmss-issue/</link><pubDate>Thu, 28 Mar 2024 18:09:38 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-03-28-automatic-os-upgrade-vmss-issue/</guid><description>If you face this issue during your VMSS deployment:
ErrorCode: DeploymentFailed
Content: {“status”:”Failed”,”error”:{“code”:”DeploymentFailed”,”target”:”/subscriptions/YOURID/resourceGroups/vmss/providers/Microsoft.Resources/deployments/VMSS_AutomaticOsUpgrade-240328-1303″,”message”:”At least one resource deployment operation failed. Please list deployment operations for details. Please see https://aka.ms/arm-deployment-operations for usage details.”,”details”:[{“code”:”BadRequest”,”message”:”Automatic OS Upgrade is not supported for this Virtual Machine Scale Set because a health probe or health extension was not specified.“}]}}
it is very easy to bypass it.
If you do not have a port for your app to monitor, you can monitor management ports, like so:</description></item><item><title>One-liner to add new privileged user to Azure Linux VM using run command</title><link>http://localhost:1313/docs/legacy/2024-03-27-one-liner-to-add-new-privileged-user-to-azure-linux-vm-using-run-command/</link><pubDate>Wed, 27 Mar 2024 11:02:42 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-03-27-one-liner-to-add-new-privileged-user-to-azure-linux-vm-using-run-command/</guid><description>When executed on an Azure VM running Linux (e.g from Run Command), this command effectively creates a new user named recovery, sets their password, and grants them sudo privileges.
sudo useradd -m recovery -s /bin/bash -p $(echo testpasswd1! | openssl passwd -1 -stdin) &amp;amp;&amp;amp; sudo usermod -aG sudo recovery</description></item><item><title>Troubleshooting a Non-Working Linux Cron Job with Strace</title><link>http://localhost:1313/docs/legacy/2024-03-21-tracing-cron-jobs/</link><pubDate>Thu, 21 Mar 2024 09:23:52 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-03-21-tracing-cron-jobs/</guid><description>If you’re facing issues with a cron job that’s not working as expected on your Linux system, one effective way to troubleshoot the problem is by using the strace utility. It is a powerful debugging tool that can trace system calls and signals, allowing you to gain insights into the behavior of a running process.
The command I’m using is:
for pid in $(pgrep cron); do strace -f -p $pid -o /tmp/strace_output_$pid.</description></item><item><title>Adventures with Arch Linux on an Old Laptop - Dell Latitude E5570</title><link>http://localhost:1313/docs/legacy/2024-03-17-revitalize-dell-latitude-e5570-arch-linux/</link><pubDate>Sun, 17 Mar 2024 13:55:06 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-03-17-revitalize-dell-latitude-e5570-arch-linux/</guid><description>I have an old laptop, a Dell Latitude E5570, and I wanted to revitalize it. Unfortunately, Windows 11 is not supported on this model without registry hacks, and I preferred not to install an unsupported product. Therefore, I decided to try Arch Linux, as the documentation indicated it should be supported:
Laptop/Dell – ArchWiki (archlinux.org)
I started to follow official installation guide:
Installation guide – ArchWiki (archlinux.org)
Created bootable flash drive with dd:</description></item><item><title>Had some fun today learning about WFP drivers</title><link>http://localhost:1313/docs/legacy/2024-02-11-windows-filtering-platform-wfp-overview/</link><pubDate>Sun, 11 Feb 2024 21:49:07 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-02-11-windows-filtering-platform-wfp-overview/</guid><description>WFP is a network packet filtering framework provided by Windows. It provides API support for both user mode and kernel mode, and can be used to easily implement network packet interception/editing, commonly used to implement firewalls, speed control and intrusion detection.
The WFP architecture is shown in the figure above. Although it provides user mode and kernel mode interfaces, the actual work is done in the kernel layer.
The main part of the WFP framework is the Filter Engine in the figure, which interacts and operates with the operating system’s network stack, and can process data in the network stack to implement data filtering and other functions.</description></item><item><title>List services scheduled for retirement in Azure Graph / KQL</title><link>http://localhost:1313/docs/legacy/2024-02-09-kql-query-microsoft-services-retirement/</link><pubDate>Fri, 09 Feb 2024 11:34:55 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-02-09-kql-query-microsoft-services-retirement/</guid><description>Below you will find a KQL query to list services that are about to be retired by Microsoft.
This is intended to check against the list of resources announced at
https://azure.microsoft.com/updates/?updateType=retirements
As a foundation, I used this workbook:
&amp;lt;https://github.com/microsoft/Application-Insights-Workbooks/blob/master/Workbooks/Azure%20Advisor/AzureServiceRetirement/Azure%20Services%20Retirement.workbook &amp;gt;
from which I extracted the KQL.</description></item><item><title>Encountering issues with Azure IAAS Virtual Machines not joining Azure AD post-deployment from a sysprepped template?</title><link>http://localhost:1313/docs/legacy/2024-02-02-azure-vm-deployment-azure-ad-issue/</link><pubDate>Fri, 02 Feb 2024 11:09:15 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-02-02-azure-vm-deployment-azure-ad-issue/</guid><description>Sysprep is designed to prepare an installation of Windows for duplication, clearing out specific information like registry keys, certificates, and more to avoid duplication errors. Yet, it doesn’t entirely remove all data, especially those related to Azure AD/Microsoft Entra ID or Intune enrollments. These services attach certificates and store various information across the registry, which sysprep overlooks.
Cloning a device already joined to AzureAD/Microsoft Entra ID or enrolled in Intune creates identical digital twins from Azure’s AAD/Entra perspective, making it impossible for Azure AD/Intune to differentiate between them due to identical device IDs and certificates.</description></item><item><title>How to Create Your Own Custom Filter Driver for Windows</title><link>http://localhost:1313/docs/legacy/2024-02-01-create-custom-filter-driver-windows/</link><pubDate>Thu, 01 Feb 2024 01:25:46 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-02-01-create-custom-filter-driver-windows/</guid><description>A Windows Filter Driver is a specialized driver within the Microsoft Windows operating system. It serves as a mechanism to intercept and modify the behavior of specific system operations. These drivers function at a low level within the operating system, enabling the monitoring or alteration of interactions between the OS and its hardware or software components. Filter drivers essentially “filter” I/O requests (input/output), intercepting and potentially modifying them for a particular device or file system.</description></item><item><title>How to install WinDBG preview (Windows Store version) on Windows Server?</title><link>http://localhost:1313/docs/legacy/2024-01-30-install-windbg-windows-server-no-windows-store/</link><pubDate>Tue, 30 Jan 2024 11:20:24 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-01-30-install-windbg-windows-server-no-windows-store/</guid><description>Windows Debugger is an essential tool for developers and IT professionals working with Windows environments. However, if you’re using Windows Server, you might encounter a unique challenge: WinDbg preview is typically available as a Windows Store package, but Windows Server installations do not include the Windows Store. This guide will walk you through an alternative method to install WinDbg on your Windows Server.
The first step is to visit the official WinDbg documentation page at Microsoft’s WinDbg Guide.</description></item><item><title>Azure Resource Graph Queries to see who has access to Azure Subscriptions</title><link>http://localhost:1313/docs/legacy/2024-01-15-azzure-resource-graph-query-access/</link><pubDate>Mon, 15 Jan 2024 14:30:41 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2024-01-15-azzure-resource-graph-query-access/</guid><description>Occasionally, you may need to gather data regarding all resource groups, identities, and users with access to your Azure subscriptions. This can be efficiently achieved using the Azure Resource Graph.
Some samples below.
Shows all resources:</description></item><item><title>PowerShell: Create a New Domain Admin User</title><link>http://localhost:1313/docs/legacy/2023-12-01-recover-azure-vm-domain-admin-access/</link><pubDate>Fri, 01 Dec 2023 09:05:10 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-12-01-recover-azure-vm-domain-admin-access/</guid><description>If you have deployed a Windows Virtual Machine from the Azure Marketplace that comes with a domain controller pre-installed, and your local domain admin password has expired, you will not be able to recover access using Azure’s built-in password recovery tool, as it is not supported on domain controllers. However, you can use the script provided below as a Run Command to create a new domain admin user and regain access:</description></item><item><title>Enabling Anonymous Access to Azure Blob Storage</title><link>http://localhost:1313/docs/legacy/2023-11-07-enable-anonymous-access-azure-blob-storage/</link><pubDate>Tue, 07 Nov 2023 14:39:06 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-11-07-enable-anonymous-access-azure-blob-storage/</guid><description>Step 1: Configure Blob Anonymous Access # To begin, navigate to your Azure Storage account’s configuration blade. Here, you’ll find an option to enable blob anonymous access. This is the first and fundamental step in making your blobs publicly accessible.
With blob anonymous access enabled, the next step involves setting the appropriate access level on your container. Choose the container you wish to modify and proceed to change its access level settings.</description></item><item><title>Current configuration options for SMB 1.0 in Windows Environments</title><link>http://localhost:1313/docs/legacy/2023-11-06-manage-smb-1-windows/</link><pubDate>Mon, 06 Nov 2023 11:38:12 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-11-06-manage-smb-1-windows/</guid><description>SMB 1.0 is an older protocol version that, despite its vulnerabilities, remains necessary for compatibility with certain legacy systems. Due to these security risks, modern Windows installations have moved away from SMB 1.0 in favor of its successors, SMB 2.0 and 3.0. Managing SMB 1.0 in modern Windows environments requires understanding the tools available for enabling or disabling it. Here’s a look at these tools and how they interact:
Windows Feature Toggle: Controls the installation of SMB 1.</description></item><item><title>Setting Up a Flask Web Application with Gunicorn on WSL</title><link>http://localhost:1313/docs/legacy/2023-10-18-setting-up-a-flask-web-application-with-gunicorn-on-wsl/</link><pubDate>Wed, 18 Oct 2023 09:00:45 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-18-setting-up-a-flask-web-application-with-gunicorn-on-wsl/</guid><description>Here are the steps needed to create a flask app served by Gunicorn on WSL:
Step 1: Install Required Packages # Before we begin, it’s essential to make sure that Python and pip (Python’s package installer) are installed on your WSL terminal. To do so, open your WSL terminal and execute the following commands:
sudo apt update sudo apt install python3 python3-pip sudo apt install python3.10-venv
This will update your package list and install Python 3, pip, and the Python 3.</description></item><item><title>Most Popular Operating Systems (Desktop &amp;amp; Laptops) 1978 &amp;#8211; 2023</title><link>http://localhost:1313/docs/legacy/2023-10-15-most-popular-operating-systems-desktop-laptops-1978-2023/</link><pubDate>Sun, 15 Oct 2023 11:35:54 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-15-most-popular-operating-systems-desktop-laptops-1978-2023/</guid><description/></item><item><title>PowerShell: Analyzing Virtual Machine Activity Logs to Determine Uptime and Downtime</title><link>http://localhost:1313/docs/legacy/2023-10-12-azure-vm-log-analysis-powershell/</link><pubDate>Thu, 12 Oct 2023 10:29:25 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-12-azure-vm-log-analysis-powershell/</guid><description>One common task many administrators often face is monitoring and analyzing virtual machine activity logs to determine uptime and downtime.
Here is a script that can help you getting started:
Write-Host &amp;ldquo;Fetching activity logs for the specified VM in the last $daysAgo days&amp;hellip;&amp;rdquo; $logs = Get-AzLog -ResourceGroupName $resourceGroupName -StartTime (Get-Date).AddDays(-$daysAgo)
Write-Host &amp;ldquo;Filtering logs for VM start, stop, and deallocate actions that have &amp;lsquo;Succeeded&amp;rsquo; status&amp;hellip;&amp;rdquo; $relevantLogs = $logs | Where-Object { ( $.</description></item><item><title>Thank You, ChatGPT</title><link>http://localhost:1313/docs/legacy/2023-10-11-thank-you-chatgpt/</link><pubDate>Wed, 11 Oct 2023 22:04:59 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-11-thank-you-chatgpt/</guid><description/></item><item><title>Nested Virtualization Madness: Running DOSBox Inside Windows XP Inside Windows 10 on an Azure VM with Hyper-V</title><link>http://localhost:1313/docs/legacy/2023-10-11-nested-virtualization-madness-running-dosbox-inside-windows-xp-inside-windows-10-on-an-azure-vm-with-hyper-v/</link><pubDate>Wed, 11 Oct 2023 14:13:24 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-11-nested-virtualization-madness-running-dosbox-inside-windows-xp-inside-windows-10-on-an-azure-vm-with-hyper-v/</guid><description>Just for fun, I have an Azure VM running Hyper-V, which in turn is running Windows 10. On that Windows 10, I’m running Windows XP, and within XP, I have DOSBox running.</description></item><item><title>PowerShell: Script-Based Workaround for Renaming Azure VMs and Switching to Unsupported Sizes</title><link>http://localhost:1313/docs/legacy/2023-10-10-bypassing-azure-vm-limitations-script-based-solution/</link><pubDate>Tue, 10 Oct 2023 14:48:05 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-10-bypassing-azure-vm-limitations-script-based-solution/</guid><description>Inability to change the name of an existing Azure VM. Constraints when resizing VMs, specifically: You can’t resize a VM size that has a local temp disk to a VM size without one, and vice versa. The only combinations allowed for resizing are:
VM (with no local temp disk) -&amp;gt; VM (with no local temp disk) VM (with local temp disk) -&amp;gt; VM (with local temp disk) Workaround # Below is a PowerShell script that allows you to circumvent the VM name and size restrictions while keeping the disk, network interface card, and extensions in place.</description></item><item><title>Azure Capacity Reservations &amp;#038; Azure Reserved Instances</title><link>http://localhost:1313/docs/legacy/2023-10-08-understanding-azure-capacity-reservations-guide/</link><pubDate>Sun, 08 Oct 2023 18:53:13 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-08-understanding-azure-capacity-reservations-guide/</guid><description>Azure Reserved Instances # Azure Reserved Instances allow you to commit to a specific amount of resources for a defined period (one or three years), in return for a discounted rate. For instance, if you commit to using a certain type of virtual machine for one year, Azure offers you a huge discount. Committing for three years increases the discount to even further. The main point to note here is that while you get cost savings, Azure Reserved Instances do not guarantee that the reserved capacity will be available when you need it.</description></item><item><title>Bicep: Deploy 3 RHEL 9.2 VMs with shared disks to form a cluster</title><link>http://localhost:1313/docs/legacy/2023-10-08-deploy-3-rhel-9_2-vms-with-shared-disks-to-form-a-cluster/</link><pubDate>Sun, 08 Oct 2023 13:19:15 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-08-deploy-3-rhel-9_2-vms-with-shared-disks-to-form-a-cluster/</guid><description>This Bicep template automates the deployment of a highly available cluster of Red Hat Enterprise Linux (RHEL) virtual machines in Azure.
Parameters: # vmNames: Specifies the names of the virtual machines. The maximum length for each name is 15 characters. adminUsername: Sets the username for the administrator account on each VM. adminPassword: Sets the password for the administrator account on each VM. The minimum length for the password is 12 characters.</description></item><item><title>C++: Detecting Hypervisor Presence Using CPUID Timing</title><link>http://localhost:1313/docs/legacy/2023-10-05-detecting-hypervisor-presence-using-cpuid-in-cpp/</link><pubDate>Thu, 05 Oct 2023 21:12:44 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-05-detecting-hypervisor-presence-using-cpuid-in-cpp/</guid><description>The CPUID instruction is a processor supplementary instruction for the x86 architecture. It is used to query the CPU for information about its features and capabilities.
How VM-Exits Work with CPUID # The guest operating system executes the CPUID instruction. The CPU generates a VM-exit interrupt. The hypervisor intercepts the VM-exit interrupt and takes control of the VM. The hypervisor executes the CPUID instruction and returns the results to the guest operating system.</description></item><item><title>Streamlining Linux System Diagnostics: An Open-Source, Web-Based Approach</title><link>http://localhost:1313/docs/legacy/2023-10-03-linux-aio-performance-checker-real-time-diagnostics/</link><pubDate>Tue, 03 Oct 2023 22:53:43 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-03-linux-aio-performance-checker-real-time-diagnostics/</guid><description>To bridge this gap, my friend and colleague developed an open-source solution called Linux AIO Performance Checker.
This tool is designed for real-time diagnostics and performance issue resolution, rather than long-term monitoring. It is particularly useful for scenarios where actual monitoring metrics are collected at higher (e.g. 5 minute) intervals.
The automated script uses a range of Linux diagnostic tools, categorized as follows:
CPU Diagnostics: mpstat, pidstat, uptime Memory Diagnostics: vmstat, free Storage Diagnostics: iostat, df -h, lsblk -f, parted -l, pvdisplay, vgdisplay, lvdisplay, pvscan, vgscan, lvscan, ls -l /dev/mapper, iotop Generic OS Information: date, top, ps -H, sar, os-release, last installed updates The script automates the execution of these diagnostic tools at certain intervals, capturing and parsing their output into a structured format.</description></item><item><title>Reverse Engineering .NET Applications Without Using Assembler</title><link>http://localhost:1313/docs/legacy/2023-10-01-reverse-engineering-dotnet-applications-without-assembler/</link><pubDate>Sun, 01 Oct 2023 21:55:05 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-10-01-reverse-engineering-dotnet-applications-without-assembler/</guid><description>Reverse engineering is a common practice in software development, often used for debugging, security auditing, or even academic research. While many might associate reverse engineering with delving into complex assembler code, it’s possible to reverse engineer .NET applications without touching assembler at all. In this blog post, we’ll explore why and how you can peek into .NET application code, demonstrate this with a sample application, and discuss potential solutions for protecting your code.</description></item><item><title>Rest API: Azure REST API POC</title><link>http://localhost:1313/docs/legacy/2023-09-28-azure-rest-api-powershell-poc/</link><pubDate>Thu, 28 Sep 2023 13:20:38 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-28-azure-rest-api-powershell-poc/</guid><description>This PowerShell script serves as a Proof of Concept for teaching how to interact with Azure resources using REST API calls via PowerShell. It automates a series of Azure resource management tasks, providing a hands-on example for those looking to understand Azure REST API operations.
Operations Covered: # Create a Managed Disk: Demonstrates how to allocate a managed disk in Azure. Create a Virtual Network (VNet): Shows the steps to set up a virtual network.</description></item><item><title>How to Upgrade Legacy Azure Windows VMs Not Supported by Azure&amp;#8217;s Native In-Place Upgrade Feature</title><link>http://localhost:1313/docs/legacy/2023-09-27-how-to-upgrade-legacy-azure-windows-vms/</link><pubDate>Wed, 27 Sep 2023 00:39:31 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-27-how-to-upgrade-legacy-azure-windows-vms/</guid><description>In a previous guide, we discussed upgrading Windows Server 2012 R2 (WS2012R2) in Azure using Azure’s native upgrade mechanism. However, what do you do if you’re dealing with a legacy workload? If you’re concerned about the long-term security and supportability of your VM, and redeploying or moving everything within the OS isn’t feasible, this guide is for you. Here, I’ll walk you through the process of upgrading a legacy Azure Windows VM without relying on any on-premises solutions or exporting the drive.</description></item><item><title>Deploy Storage Spaces on a Single Virtual Machine to Get Optimal Performance/Cost Ratio</title><link>http://localhost:1313/docs/legacy/2023-09-25-deploy-storage-spaces-on-azure-vm/</link><pubDate>Mon, 25 Sep 2023 22:10:24 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-25-deploy-storage-spaces-on-azure-vm/</guid><description>Storage Spaces is a feature of Windows Server that allows you to pool multiple physical disks together to create a single virtual disk. This can be useful for a variety of reasons, such as:
To increase the overall capacity of your storage. To improve the performance of your storage by distributing data across multiple disks. To get azure host caching feature on disks that are higher than 4 TB. In this article, I will show you how to deploy Storage Spaces on a single virtual machine in Azure to achieve optimal storage performance with minimal cost.</description></item><item><title>In Place Upgrade Your Windows Server Azure VM: Step by Step Guide</title><link>http://localhost:1313/docs/legacy/2023-09-24-windows-server-azure-vm-in-place-upgrade/</link><pubDate>Sun, 24 Sep 2023 16:28:12 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-24-windows-server-azure-vm-in-place-upgrade/</guid><description>Upgrading your Windows Server Azure VM to a newer version can seem daunting, but with the right steps, it can be a smooth process. This guide will walk you through a step-by-step process, complete with visuals, to upgrade your Windows VM in Azure, for instance, from WS 2016 to 2019.
Prerequisites for a Successful Upgrade # Before diving into the upgrade, ensure the following prerequisites are met:
Managed Disk Usage</description></item><item><title>How to resolve the NLA error in Azure VMs when the computer object is removed from Active Directory</title><link>http://localhost:1313/docs/legacy/2023-09-22-how-to-resolve-the-nla-error-in-azure-vms-when-the-computer-object-is-removed-from-active-directory/</link><pubDate>Fri, 22 Sep 2023 21:05:09 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-22-how-to-resolve-the-nla-error-in-azure-vms-when-the-computer-object-is-removed-from-active-directory/</guid><description>If you’re working with Azure Virtual Machines, you might encounter a situation where you see an error related to Network Level Authentication. This typically arises when your VM loses communication with the Domain Controller, the trust relationship between the VM and DC is compromised, or the VM’s computer object has been removed from the DC.
Navigate to the Azure portal.
Locate the VM that is experiencing the NLA error.
Click Run Command.</description></item><item><title>C++: Memory Leaker Tool &amp;#8211; VeryLeakyCauldron</title><link>http://localhost:1313/docs/legacy/2023-09-22-simulating-memory-leaks-in-c-with-the-c-memory-leaker-tool-veryleakycauldron/</link><pubDate>Fri, 22 Sep 2023 14:09:42 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-22-simulating-memory-leaks-in-c-with-the-c-memory-leaker-tool-veryleakycauldron/</guid><description>Memory leaks are a common problem in programming. They can occur when memory is allocated and then not properly deallocated, leading to a waste of resources and potentially causing performance problems.
This C++ Memory Leaker tool is a simple tool that can be used to simulate memory leaks. It works by allocating a specified amount of memory and then not deallocating it. This can be done manually or automatically at a specified interval.</description></item><item><title>Why can&amp;#8217;t I resize the underlying storage used by Storage Spaces?</title><link>http://localhost:1313/docs/legacy/2023-09-21-why-cant-i-resize-the-underlying-storage-used-by-storage-spaces-direct/</link><pubDate>Thu, 21 Sep 2023 22:56:14 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-21-why-cant-i-resize-the-underlying-storage-used-by-storage-spaces-direct/</guid><description>Storage Spaces is a Windows Server storage technology that pools the storage capacity of multiple disks into a single virtual disk. This technology is often used to create highly available and scalable storage solutions for virtual machines and other workloads.
One of the limitations of Storage Spaces is that it does not support resizing the underlying storage. This means that if you need to add more storage to a Storage Spaces, you must do so by adding new drives.</description></item><item><title>PowerShell: Download and Use AzCopy (Windows) to Upload Files to Azure Blob Storage</title><link>http://localhost:1313/docs/legacy/2023-09-20-powershell-download-and-use-azcopy-to-upload-files-to-azure-blob-storage/</link><pubDate>Wed, 20 Sep 2023 15:22:09 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-20-powershell-download-and-use-azcopy-to-upload-files-to-azure-blob-storage/</guid><description>AzCopy is a powerful command-line utility that allows for streamlined data transfer to and from Azure Blob, File, and Table storage.
Script below will download, install, and utilize AzCopy on a Windows machine to upload a file to Azure Blob Storage.
$azCopyUrl = &amp;ldquo;https://aka.ms/downloadazcopy-v10-windows" $destination = &amp;ldquo;C:\Temp\AzCopy.zip&amp;rdquo;
Ensure C:\Temp exists # if (-not (Test-Path &amp;ldquo;C:\Temp&amp;rdquo;)) { New-Item -ItemType Directory -Path &amp;ldquo;C:\Temp&amp;rdquo; -Force } Invoke-WebRequest -Uri $azCopyUrl -OutFile $destination Expand-Archive -Path $destination -DestinationPath &amp;ldquo;C:\Temp\azcopy&amp;rdquo; $azCopyExe = Get-ChildItem -Path &amp;ldquo;C:\Temp\azcopy&amp;rdquo; -Recurse -Filter &amp;ldquo;azcopy.</description></item><item><title>PowerShell: Automating Windows Crash Control Configuration</title><link>http://localhost:1313/docs/legacy/2023-09-20-powershell-automating-windows-crash-control-configuration/</link><pubDate>Wed, 20 Sep 2023 14:29:42 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-20-powershell-automating-windows-crash-control-configuration/</guid><description>This script aims to automate the task of configuring several settings under the Windows CrashControl registry path. The configurations include specifying memory dump paths, enabling auto-reboot, setting logging levels, and more.
Reference documentation:
https://learn.microsoft.com/en-us/troubleshoot/windows-client/performance/generate-a-kernel-or-complete-crash-dump
try { Set-ItemProperty -Path $registryPath -Name &amp;ldquo;AutoReboot&amp;rdquo; -Value 1 Set-ItemProperty -Path $registryPath -Name &amp;ldquo;CrashDumpEnabled&amp;rdquo; -Value 1 Set-ItemProperty -Path $registryPath -Name &amp;ldquo;DisableEmoticon&amp;rdquo; -Value 1 Set-ItemProperty -Path $registryPath -Name &amp;ldquo;DumpFile&amp;rdquo; -Value $dumpFilePath Set-ItemProperty -Path $registryPath -Name &amp;ldquo;DumpLogLevel&amp;rdquo; -Value 0 Set-ItemProperty -Path $registryPath -Name &amp;ldquo;EnableLogFile&amp;rdquo; -Value 1 Set-ItemProperty -Path $registryPath -Name &amp;ldquo;LogEvent&amp;rdquo; -Value 1 Set-ItemProperty -Path $registryPath -Name &amp;ldquo;MinidumpDir&amp;rdquo; -Value $minidumpDir</description></item><item><title>PowerShell: Create a NAT VMSwitch on Hyper-V</title><link>http://localhost:1313/docs/legacy/2023-09-18-powershell-create-a-nat-vmswitch-on-hyper-v/</link><pubDate>Mon, 18 Sep 2023 09:38:37 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-18-powershell-create-a-nat-vmswitch-on-hyper-v/</guid><description>https://learn.microsoft.com/en-us/virtualization/hyper-v-on-windows/user-guide/setup-nat-network
Live migration in clustered scenario won’t work for VMs using this NAT.
Quick migration will work.
Define the NAT Switch Name and NAT Configuration Parameters # $switchName = &amp;ldquo;NATSwitch&amp;rdquo; $natSubnet = &amp;ldquo;192.168.100.0/24&amp;rdquo; $gatewayAddress = &amp;ldquo;192.168.100.1&amp;rdquo; $netAdapaterName = &amp;ldquo;vEthernet (&amp;quot;+$switchName+&amp;rdquo;)&amp;quot;
Create a new virtual switch # New-VMSwitch -SwitchName $switchName -SwitchType Internal
Retrieve the actual Network Adapter for the created switch # $netAdapter = Get-NetAdapter -Name $netAdapaterName
Set the IP address on the NAT Gateway (the virtual switch) # New-NetIPAddress -IPAddress $gatewayAddress -PrefixLength 24 -InterfaceIndex $netAdapter.</description></item><item><title>PowerShell: Download ISO from MSDN Directly to the Server/VM</title><link>http://localhost:1313/docs/legacy/2023-09-18-powershell-download-iso-from-msdn-directly-to-the-server-vm/</link><pubDate>Mon, 18 Sep 2023 09:22:23 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-18-powershell-download-iso-from-msdn-directly-to-the-server-vm/</guid><description>Define the destination path where the ISO file will be saved # $destinationPath = &amp;ldquo;C:\Temp\WS2012.iso&amp;rdquo;
Download the ISO file # Invoke-WebRequest -Uri $isoUrl -OutFile $destinationPath
Output the location where the ISO file has been saved # Write-Host &amp;ldquo;ISO file has been downloaded to $destinationPath&amp;rdquo;&amp;quot; role=&amp;ldquo;button&amp;rdquo; style=&amp;ldquo;color:#D4D4D4;display:none&amp;rdquo; tabindex=&amp;ldquo;0&amp;rdquo;&amp;gt;``` # Define the URL of the ISO file $isoUrl = &amp;ldquo;https://myvs.download.prss.microsoft.com/yourisofilepath.iso" # Define the destination path where the ISO file will be saved $destinationPath = &amp;ldquo;C:\Temp\WS2012.</description></item><item><title>Overview of &amp;#8220;Shedevrum&amp;#8221;: Yandex&amp;#8217;s Online Image/Content Generation Service</title><link>http://localhost:1313/docs/legacy/2023-09-17-overview-of-shedevrum-yandexs-online-image-content-generation-service/</link><pubDate>Sun, 17 Sep 2023 22:03:30 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-17-overview-of-shedevrum-yandexs-online-image-content-generation-service/</guid><description>Yandex has introduced a new online platform called “Shedevrum”, designed for generating images and text. This platform not only crafts illustrations and written content swiftly but also offers a space for users to share their creations with an expansive audience within the application.
For those navigating through Shedevrum, several functionalities are available:
Users can view top-rated posts on a daily, weekly, or all-time basis. Interaction tools such as ‘like’, comment, and ‘follow author’ options enhance user engagement.</description></item><item><title>Hosting a Custom ChatGPT Web UI with Your Own API Keys</title><link>http://localhost:1313/docs/legacy/2023-09-16-hosting-a-custom-chatgpt-web-ui-with-your-own-api-keys/</link><pubDate>Sat, 16 Sep 2023 23:04:22 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-16-hosting-a-custom-chatgpt-web-ui-with-your-own-api-keys/</guid><description>With the increasing popularity of ChatGPT, many IT enthusiasts are exploring ways to host their custom ChatGPT web frontends. There are several options available ranging from the Microsoft’s “Azure Open AI at scale” project to various third-party ones. However, for this exercise I’ve picked a 3rd party one, as it is lightweight, doesn’t require any extra components such as Azure Active Directory Microsoft Entra ID or databases to function, and it is very easy to deploy.</description></item><item><title>PowerShell: Gather DNS Server Logs from Windows</title><link>http://localhost:1313/docs/legacy/2023-09-13-powershell-gather-dns-server-logs-from-windows/</link><pubDate>Wed, 13 Sep 2023 14:25:29 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-13-powershell-gather-dns-server-logs-from-windows/</guid><description> if (-not (Test-Path $destDirectory)) { New-Item -ItemType Directory -Path $destDirectory }
Get-WinEvent -LogName &amp;lsquo;DNS Server&amp;rsquo; | Export-Csv -Path &amp;ldquo;$destDirectory\DNSServerEvents.csv&amp;rdquo; -NoTypeInformation
dnscmd /info &amp;gt; &amp;ldquo;$destDirectory\DNSConfig.txt&amp;rdquo;
Write-Output &amp;ldquo;Diagnostic logs have been gathered and saved to $destDirectory&amp;rdquo; &amp;quot; role=&amp;ldquo;button&amp;rdquo; style=&amp;ldquo;color:#D4D4D4;display:none&amp;rdquo; tabindex=&amp;ldquo;0&amp;rdquo;&amp;gt;``` $destDirectory = &amp;ldquo;C:\DNSLogs&amp;rdquo; if (-not (Test-Path $destDirectory)) { New-Item -ItemType Directory -Path $destDirectory } Get-WinEvent -LogName &amp;lsquo;DNS Server&amp;rsquo; | Export-Csv -Path &amp;quot;$destDirectory\DNSServerEvents.csv&amp;quot; -NoTypeInformation dnscmd /info &amp;gt; &amp;quot;$destDirectory\DNSConfig.txt&amp;quot; Write-Output &amp;ldquo;Diagnostic logs have been gathered and saved to $destDirectory&amp;quot; &amp;lt;/div&amp;gt;</description></item><item><title>Powershell: Tracking Last Domain Login Events on Azure VMs</title><link>http://localhost:1313/docs/legacy/2023-09-11-tracking-last-domain-login-events-on-azure-vms-a-handy-script/</link><pubDate>Mon, 11 Sep 2023 07:29:10 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-11-tracking-last-domain-login-events-on-azure-vms-a-handy-script/</guid><description>When managing virtual machines (VMs) in a cloud environment like Azure, it’s crucial to monitor user activities for various reasons. Whether it’s for auditing, security, or simply to track unused resources, knowing the last time someone logged in can provide valuable insights. If you’re not sure whether anyone is even logging into your Azure VM, you can check the last domain login events without breaking a sweat. All you need is PowerShell and Azure’s “Run Command” feature.</description></item><item><title>How Hyper-V Works, High Level Overview</title><link>http://localhost:1313/docs/legacy/2023-09-10-how-hyper-v-works-high-level-overview/</link><pubDate>Sun, 10 Sep 2023 19:28:13 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-10-how-hyper-v-works-high-level-overview/</guid><description>Hyper-V stands as Microsoft’s first standalone hypervisor, offering extensive support for the x86-64 architecture. It has established its own space in the virtualization market, going toe-to-toe with competitors like VMware ESXi, Xen, and KVM. One of its distinct advantages is its native integration with Microsoft-centric environments.
Contrary to many Type 2 hypervisors that function atop an existing operating system, Hyper-V is a Type 1 hypervisor that interacts directly with the hardware.</description></item><item><title>Understanding AMSI: The Antimalware Scan Interface in Windows Systems</title><link>http://localhost:1313/docs/legacy/2023-09-05-understanding-amsi-the-antimalware-scan-interface-in-windows-systems/</link><pubDate>Tue, 05 Sep 2023 20:28:06 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-09-05-understanding-amsi-the-antimalware-scan-interface-in-windows-systems/</guid><description>The Antimalware Scan Interface (AMSI) is a key element in Windows’ cybersecurity framework, often working behind the scenes to protect your system from malicious software. It serves as an intermediary between software and installed antivirus solutions, providing an extra layer of security for the system. Introduced in 2015 with Windows 10, AMSI has been an integral part of subsequent Windows versions.
Structurally, AMSI functions as an integrated application equipped with an open system API.</description></item><item><title>How to Track Registry Key Modifications Using Process Monitor</title><link>http://localhost:1313/docs/legacy/2023-08-28-how-to-track-registry-key-modifications-using-process-monitor/</link><pubDate>Mon, 28 Aug 2023 12:57:25 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-08-28-how-to-track-registry-key-modifications-using-process-monitor/</guid><description>Modifying registry keys is a common operation that can be performed by both system and user processes. But what happens when a registry key value changes unexpectedly, leading to system behavior that’s hard to diagnose? Knowing exactly which process modified a registry key can be invaluable in system administration and debugging scenarios. One powerful tool that can help you identify such changes in real-time is Sysinternals Process Monitor.
In this blog post, I’ll guide you through setting up Process Monitor to capture only the relevant events related to a specific registry key modification.</description></item><item><title>Bicep: Execute a RunCommand on already running Azure Virtual Machine</title><link>http://localhost:1313/docs/legacy/2023-08-27-bicep-execute-a-runcommand-on-already-running-azure-virtual-machine/</link><pubDate>Sun, 27 Aug 2023 17:09:56 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-08-27-bicep-execute-a-runcommand-on-already-running-azure-virtual-machine/</guid><description/></item><item><title>Azure Nested Virtualization: Hyper-V cannot be installed because virtualization support is not enabled in the BIOS.</title><link>http://localhost:1313/docs/legacy/2023-08-25-azure-nested-virtualization-hyper-v-cannot-be-installed-because-virtualization-support-is-not-enabled-in-the-bios/</link><pubDate>Fri, 25 Aug 2023 16:54:41 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-08-25-azure-nested-virtualization-hyper-v-cannot-be-installed-because-virtualization-support-is-not-enabled-in-the-bios/</guid><description>Nested virtualization is an exciting and powerful feature that allows you to run a virtual machine within another virtual machine. This capability has numerous applications in the fields of development, testing, and security. However, when trying to enable it in Azure, you may encounter a specific error related to nested virtualization:
Fortunately, the fix for this problem is relatively straightforward and can be done directly through the Command Prompt. Here’s a step-by-step guide:</description></item><item><title>How to restart Group Policy Client Service (GPSVC)</title><link>http://localhost:1313/docs/legacy/2023-08-24-how-to-restart-group-policy-client-service-gpsvc/</link><pubDate>Thu, 24 Aug 2023 14:54:07 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-08-24-how-to-restart-group-policy-client-service-gpsvc/</guid><description>Are you facing difficulties in restarting the Group Policy Client service? It’s a common issue that many have run into, especially when they find the option grayed out in the services list or receive an “Access is Denied” error from the command line. Let’s dive into why this happens and how you can get around it.
Understanding the Issue # The Group Policy Client service requires specific permissions to manage, specifically System account permissions.</description></item><item><title>Free OPNsense Firewall NVA in Azure</title><link>http://localhost:1313/docs/legacy/2023-08-24-free-opnsense-firewall-nva-in-azure/</link><pubDate>Thu, 24 Aug 2023 14:34:55 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-08-24-free-opnsense-firewall-nva-in-azure/</guid><description>I’ve stumbled upon this GitHub repository that’s pretty awesome. It’s got a deployment script that lets you run OPNSense Community Edition in Azure for free.
If you’re into firewalls, networking, or just like trying out new tech stuff, this GitHub repository is worth a glance. It’s fun, it’s free, and it’s a playground for anyone interested in what OPNSense can do in Azure.
Here’s the Link to the Repository if you want to check it out.</description></item><item><title>You&amp;#8217;ve mounted your storage account, but you see that the space available is less than visible on Azure Portal</title><link>http://localhost:1313/docs/legacy/2023-08-23-youve-mounted-your-storage-account-but-you-see-that-the-space-available-is-less-than-visible-on-azure-portal/</link><pubDate>Wed, 23 Aug 2023 11:58:07 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-08-23-youve-mounted-your-storage-account-but-you-see-that-the-space-available-is-less-than-visible-on-azure-portal/</guid><description>If you mounted your Azure Storage account via SMB, but you see that the free space is being limited:</description></item><item><title>Deploy CSE (Custom Script Extension) using Managed Identity to authenticate against storage account where script is stored on existing running VM</title><link>http://localhost:1313/docs/legacy/2023-08-22-deploy-cse-custom-script-extension-using-managed-identity-to-authenticate-against-storage-account-where-script-is-stored-on-existing-running-vm/</link><pubDate>Tue, 22 Aug 2023 15:48:56 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-08-22-deploy-cse-custom-script-extension-using-managed-identity-to-authenticate-against-storage-account-where-script-is-stored-on-existing-running-vm/</guid><description>@description(&amp;lsquo;Location for all resources.&amp;rsquo;) param location string = resourceGroup().location
resource extension &amp;lsquo;Microsoft.Compute/virtualMachines/extensions@2021-07-01&amp;rsquo; = { parent: vm name: &amp;lsquo;CustomScriptExtension&amp;rsquo; location: location properties: { publisher: &amp;lsquo;Microsoft.Compute&amp;rsquo; type: &amp;lsquo;CustomScriptExtension&amp;rsquo; typeHandlerVersion: &amp;lsquo;1.10&amp;rsquo; autoUpgradeMinorVersion: true settings: { } protectedSettings: { commandToExecute: &amp;lsquo;powershell -ExecutionPolicy Unrestricted -File testscript.ps1&amp;rsquo; managedIdentity: { clientId: &amp;lsquo;0000-0000-0000-0000&amp;rsquo;} fileUris: [ &amp;lsquo;https://YOURSA.blob.core.windows.net/scripts/testscript.ps1&amp;rsquo; ] }
} } &amp;quot; role=&amp;ldquo;button&amp;rdquo; style=&amp;ldquo;color:#D4D4D4;display:none&amp;rdquo; tabindex=&amp;ldquo;0&amp;rdquo;&amp;gt;``` resource vm &amp;lsquo;Microsoft.Compute/virtualMachines@2022-04-01&amp;rsquo; existing = { name: &amp;lsquo;YOURVM&amp;rsquo; } @description(&amp;lsquo;Location for all resources.&amp;rsquo;) param location string = resourceGroup().</description></item><item><title>C#: Working with Azure IMDS</title><link>http://localhost:1313/docs/legacy/2023-08-22-c-working-with-azure-imds/</link><pubDate>Tue, 22 Aug 2023 13:58:28 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-08-22-c-working-with-azure-imds/</guid><description>class Program { static void Main(string[] args) { //Identify Storage Type Using Azure Metadata Service string url = &amp;ldquo;http://169.254.169.254/metadata/instance?api-version=2021-02-01&amp;rdquo;; WebClient client = new WebClient(); client.Headers.Add(&amp;ldquo;Metadata&amp;rdquo;, &amp;ldquo;true&amp;rdquo;);
try { string response = client.DownloadString(url); dynamic data = JsonConvert.DeserializeObject(response); string storageProfile = data.compute.storageProfile.ToString(); dynamic storageData = JsonConvert.DeserializeObject(storageProfile); string osDiskName = storageData.osDisk.name; string osDiskCaching = storageData.osDisk.caching; string osDiskSize = storageData.osDisk.diskSizeGB; string writeAcceleratorEnabled = storageData.osDisk.writeAcceleratorEnabled; string datadisks = storageData.dataDisks.ToString(); Console.WriteLine(&amp;quot;OS Disk Name: &amp;quot; + osDiskName); Console.</description></item><item><title>C#: Check if service exists via WMI</title><link>http://localhost:1313/docs/legacy/2023-08-22-c-check-if-service-exists-via-wmi/</link><pubDate>Tue, 22 Aug 2023 13:55:49 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-08-22-c-check-if-service-exists-via-wmi/</guid><description>namespace debug { internal class Program { static void Main(string[] args) { string query = &amp;ldquo;select * from Win32_Service where name=&amp;lsquo;W3svc&amp;rsquo;&amp;rdquo;; try { using (ManagementObjectSearcher searcher = new ManagementObjectSearcher(query)) { ManagementObjectCollection services = searcher.Get(); if (services.Count == 0) { Console.WriteLine(&amp;ldquo;IIS Service not found.&amp;rdquo;); } else { foreach (ManagementObject service in searcher.Get()) { string name = service[&amp;ldquo;Name&amp;rdquo;].ToString(); string displayName = service[&amp;ldquo;DisplayName&amp;rdquo;].ToString(); string status = service[&amp;ldquo;State&amp;rdquo;].ToString();
Console.WriteLine(&amp;quot;Service Name: &amp;quot; + name); Console.</description></item><item><title>Capture network traffic using windows built in tools</title><link>http://localhost:1313/docs/legacy/2023-08-22-capture-network-traffic-using-windows-built-in-tools/</link><pubDate>Tue, 22 Aug 2023 10:36:34 +0000</pubDate><guid>http://localhost:1313/docs/legacy/2023-08-22-capture-network-traffic-using-windows-built-in-tools/</guid><description>Start the capture:
netsh trace start capture=yes level=5 tracefile=c:\temp\%computername%_nettrace.etl scenario=netconnection
&amp;lt;reproduce the issue&amp;gt;
Stop the capture:
netsh trace stop
Convert the resulting file to wireshark format:
GitHub – microsoft/etl2pcapng: Utility that converts an .etl file containing a Windows network packet capture into .pcapng format.</description></item></channel></rss>